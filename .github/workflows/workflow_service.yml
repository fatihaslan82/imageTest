# Image-To-Matrix Workflow Definition
name: Image to Matrix Service Example

# Trigger the workflow on pushes to the 'main' branch or manually
on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
        # Define the 'image_url' input that your curl command is sending.
        image_url:
          description: 'URL of the image to be processed'
          required: true
          type: string

jobs:
  # This job simulates a service that converts an image to a numerical matrix
  image-to-matrix:
    name: Image-To-Matrix Workflow
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        # This step checks out your repository code into the runner environment
        uses: actions/checkout@v4

      - name: Set up Python
        # Sets up the Python environment specified in the 'with' block
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.12'

      - name: Install dependencies (Pillow and NumPy)
        # Reads the requirements.txt file to install necessary libraries
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pillow numpy
          fi

      - name: Run Image Processing Service
        # Executes your Python script
        run: python image_processor.py
        # The script will now run the image-to-matrix conversion,
        # creating a dummy image if 'sample_input.png' is not found.
        - name: Process and Save Result
            id: processor
            run: |
              # This is where your Python code runs and saves the matrix
              python image_processor.py --url ${{ github.event.inputs.image_url }} > matrix_result.json

        - name: Upload Matrix Artifact
          uses: actions/upload-artifact@v4
          with:
            name: image-matrix-output
            path: matrix_result.json